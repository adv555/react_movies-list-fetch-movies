{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","utils/isValidUrl.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","data","movieData","preview","wrap","_context","prev","next","preventDefault","sent","Object","hasOwn","url","Poster","test","imdbID","Title","Plot","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","some","m","prevMovies","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccaf7ff7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ed5abb3e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { IsValidUrl } from '../../utils/isValidUrl';\n\nconst placeholder = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setLoading(true);\n    setError(false);\n\n    try {\n      const data = await getMovie(query);\n\n      if (Object.hasOwn(data, 'Error')) {\n        const errorResponse = data as ResponseError;\n\n        throw new Error(errorResponse.Error);\n      }\n\n      const movieData = data as MovieData;\n\n      const imgUrl = IsValidUrl(movieData.Poster)\n        ? movieData.Poster\n        : placeholder;\n\n      const imdbUrl = `https://www.imdb.com/title/${movieData.imdbID}`;\n\n      const preview = {\n        title: movieData.Title,\n        description: movieData.Plot,\n        imgUrl,\n        imdbUrl,\n        imdbId: movieData.imdbID,\n      };\n\n      setMovie(preview);\n    } catch (e) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAddMovie = () => {\n    const isInList = movies.some((m) => m.imdbId === movie?.imdbId);\n\n    if (!isInList && movie) {\n      setMovies((prevMovies) => [...prevMovies, movie]);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={(event) => {\n                setError(false);\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && !movie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n              disabled={\n                !query || loading\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={onAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie && <MovieCard movie={movie} />\n        }\n\n      </div>\n    </>\n  );\n};\n","export function IsValidUrl(url: string) {\n  // eslint-disable-next-line\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}